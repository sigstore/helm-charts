apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ctlog.fullname" . }}
{{ include "ctlog.namespace" . | indent 2 }}
  labels:
    {{- include "ctlog.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      {{- include "ctlog.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/ctlog-configmap.yaml") . | sha256sum }}
        {{- if .Values.server.podAnnotations }}
        {{- toYaml .Values.server.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ctlog.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "ctlog.serviceAccountName" . }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
        - name: {{ template "ctlog.fullname" . }}
          image: "{{ template "ctlog.image" .Values.server.image }}"
          imagePullPolicy: "{{ .Values.server.image.pullPolicy }}"
          args:
{{  include "ctlog.server.args" . | indent 12 }}
          {{- if .Values.server.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.server.livenessProbe | indent 12 }}
          {{- end }}
          {{- if .Values.server.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.server.readinessProbe | indent 12 }}
          {{- end }}
          volumeMounts:
            - name: keys
              mountPath: "/ctfe-keys"
              readOnly: true
          ports:
{{- include "ctlog.containerPorts" .Values.server.service.ports | indent 12 }}
    {{- if .Values.server.resources }}
          resources:
{{ toYaml .Values.server.resources | indent 12 }}
    {{- end }}
    {{- if .Values.server.containerSecurityContext }}
          securityContext:
{{ toYaml .Values.server.containerSecurityContext | indent 12 }}
    {{- end }}
    {{- if .Values.server.securityContext }}
      securityContext:
{{ toYaml .Values.server.securityContext | indent 8 }}
    {{- end }}
      volumes:
        - name: keys
          secret:
            secretName: {{ .Values.createctconfig.secret | default (printf "%s-secret" (include "ctlog.fullname" .)) }}
      {{- if .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.server.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.server.tolerations }}
      tolerations:
{{ toYaml .Values.server.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.server.affinity }}
      affinity:
{{ toYaml .Values.server.affinity | indent 8 }}
      {{- end }}
