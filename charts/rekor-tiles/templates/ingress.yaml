{{- if .Values.ingress.enabled }}
---
apiVersion: "networking.k8s.io/v1"
kind: Ingress
metadata:
  labels:
    {{- include "rekor-tiles.labels" . | nindent 4 }}
  name: {{ template "rekor-tiles.fullname" . }}
  namespace: {{ .Values.namespace.name }}
  annotations:
{{- if eq .Values.ingress.className "gce"}}
    kubernetes.io/ingress.class: "gce"
    {{- if .Values.ingress.frontendConfigSpec }}
    networking.gke.io/v1beta1.FrontendConfig: "{{ include "rekor-tiles.fullname" $ }}"
    {{- end }}
    {{- if .Values.ingress.staticGlobalIP }}
    kubernetes.io/ingress.global-static-ip-name: {{ .Values.ingress.staticGlobalIP | quote }}
    {{- end }}
{{- end }}
{{- with .Values.ingress.annotations }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
{{- if and (.Values.ingress.className) (not (eq .Values.ingress.className "gce")) }}
  ingressClassName: {{ .Values.ingress.className }}
{{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ required "An Ingress hostname is required" .host | quote }}
      http:
        paths:
          - path: {{ .path }}
            pathType: {{ default "Prefix" .pathType }}
            backend: {{- include "rekor-tiles.ingress.backend" $  | nindent 14 }}
    {{- end }}
{{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
      - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
{{- end }}
{{- end }}
