apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fulcio.fullname" . }}
{{ include "fulcio.namespace" . | indent 2 }}
  labels:
    {{- include "fulcio.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      {{- include "fulcio.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/fulcio-configmap.yaml") . | sha256sum }}
        {{- if .Values.server.podAnnotations }}
        {{- toYaml .Values.server.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include "fulcio.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "fulcio.serviceAccountName" . }}
      # This doesn't actually use Kubernetes credentials, so don't mount them in.
      automountServiceAccountToken: {{ .Values.server.serviceAccount.mountToken }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
        - name: {{ template "fulcio.fullname" . }}
          image: "{{ template "fulcio.image" .Values.server.image }}"
          imagePullPolicy: "{{ .Values.server.image.pullPolicy }}"
          ports:
{{- include "fulcio.containerPorts" .Values.server.service.ports | indent 12 }}
          args:
            - "serve"
            - "--port={{ .Values.server.args.port }}"
            - "--grpc-port={{ .Values.server.args.grpcPort }}"
            - "--ca={{ .Values.server.args.certificateAuthority }}"
            {{- if eq .Values.server.args.certificateAuthority "googleca" }}
            - "--gcp_private_ca_parent={{ .Values.server.args.gcp_private_ca_parent }}"
            {{- end }}
            {{- if eq .Values.server.args.certificateAuthority "pkcs11ca" }}
            - "--hsm-caroot-id={{ .Values.server.args.hsm_caroot_id }}"
            {{- end }}
            {{- if eq .Values.server.args.certificateAuthority "aws-hsm-root-ca-path" }}
            - "--aws-hsm-root-ca-path={{ .Values.server.args.aws_hsm_root_ca_path }}"
            {{- end }}
            {{- if eq .Values.server.args.certificateAuthority "fileca" }}
            - "--fileca-key"
            - "/var/run/fulcio-secrets/key.pem"
            - "--fileca-cert"
            - "/var/run/fulcio-secrets/cert.pem"
            - "--fileca-key-passwd"
            - "$(PASSWORD)"
            {{- end }}
            {{- if .Values.server.logging.production }}
            - "--log_type=prod"
            {{- end -}}
            {{- if eq .Values.server.args.certificateAuthority "kmsca" }}
            - "--kms-resource={{ .Values.server.args.kms_resource }}"
            - "--kms-cert-chain-path=/etc/fulcio-config/chain.pem"
            {{- end }}
            - "--ct-log-url={{ if .Values.server.args.disable_ct_log }}{{ else if .Values.server.args.ct_log_url }}{{ .Values.server.args.ct_log_url }}{{ else }}http://{{ .Values.ctlog.name }}.{{ .Values.ctlog.namespace.name }}.svc/{{ .Values.ctlog.createctconfig.logPrefix }}{{ end }}"
            - '--config-path=/etc/fulcio-config/config.{{- if eq .Values.config.format "yaml"}}yaml{{- else }}json{{- end }}'
            {{- if .Values.server.grpcSvcTLS }}
            - "--grpc-tls-certificate=/var/run/grpc-tls/cert.pem"
            - "--grpc-tls-key=/var/run/grpc-tls/key.pem"
            {{- end }}
            {{- range .Values.server.extraArgs }}
            - {{ . | quote }}
            {{- end }}
        {{- if or .Values.server.env (eq .Values.server.args.certificateAuthority "fileca") }}
          env:
          {{- range $key, $value := .Values.server.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
          {{- if eq .Values.server.args.certificateAuthority "fileca" }}
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.server.secret }}
                key: password
          {{- end }}
        {{- end }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: {{ .Values.server.args.port }}
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: {{ .Values.server.args.port }}
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: fulcio-config
              mountPath: /etc/fulcio-config
            - name: oidc-info
              mountPath: /var/run/fulcio
           {{- if eq .Values.server.args.certificateAuthority "fileca" }}
            - name: fulcio-cert
              mountPath: "/var/run/fulcio-secrets"
              readOnly: true
           {{- end }}
           {{- if .Values.server.grpcSvcTLS }}
            - name: grpc-tls
              mountPath: "/var/run/grpc-tls"
              readOnly: true
           {{- end }}
    {{- if .Values.server.resources }}
          resources:
{{ toYaml .Values.server.resources | indent 12 }}
    {{- end }}
    {{- if .Values.server.containerSecurityContext }}
          securityContext:
{{ toYaml .Values.server.containerSecurityContext | indent 12 }}
    {{- end }}
    {{- if .Values.server.securityContext }}
      securityContext:
{{ toYaml .Values.server.securityContext | indent 8 }}
    {{- end }}
      volumes:
        - name: fulcio-config
          configMap:
            name: {{ template "fulcio.config" . }}
        - name: oidc-info
          projected:
            sources:
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
                      mode: 0666
        {{- if eq .Values.server.args.certificateAuthority "fileca" }}
        - name: fulcio-cert
          secret:
            secretName: {{ .Values.server.secret }}
            items:
              - key: private
                path: key.pem
              - key: cert
                path: cert.pem
        {{- end }}
        {{- if .Values.server.grpcSvcTLS }}
        - name: grpc-tls
          secret:
            secretName: {{ .Values.server.grpcSvcTLS.secretName }}
            items:
              - key: {{ .Values.server.grpcSvcTLS.certField }}
                path: cert.pem
              - key: {{ .Values.server.grpcSvcTLS.keyField }}
                path: key.pem
        {{- end }}
    {{- if .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.server.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.server.tolerations }}
      tolerations:
{{ toYaml .Values.server.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.server.affinity }}
      affinity:
{{ toYaml .Values.server.affinity | indent 8 }}
    {{- end }}
