namespace:
  create: false
  name: fulcio-system
config:
  contents: {}
server:
  replicaCount: 1
  name: server
  svcPort: 80
  grpcSvcPort: 5554
  image:
    registry: gcr.io
    repository: projectsigstore/fulcio
    pullPolicy: IfNotPresent
    # v0.3.0
    version: "sha256:4bdb610d80e8ab7decb6e437ce5327568b91e98715a2aa653f51b075447510a7"
  args:
    port: 5555
    grpcPort: 5554
    # Valid values: googleca, pkcs11ca, aws-hsm-root-ca-path, fileca, kmsca
    certificateAuthority: fileca
    # kms_resource: gcpkms://....
    # kms_cert_chain: |-
    #   << your PEM encoded cert chain here. Order from active intermedate first to root last >>
    hsm_caroot_id:
    aws_hsm_root_ca_path:
    gcp_private_ca_parent: projects/test/locations/us-east1/caPools/test
  serviceAccount:
    create: true
    name: ""
    annotations: {}
    mountToken: true
  service:
    type: ClusterIP
    ports:
      - name: http
        port: 80
        protocol: TCP
        targetPort: 5555
      - name: grpc
        port: 5554
        protocol: TCP
        targetPort: 5554
      - name: 2112-tcp
        port: 2112
        protocol: TCP
        targetPort: 2112
  ingress:
    http:
      enabled: true
      annotations: {}
      hosts:
        - path: /
      tls: []
    grpc:
      enabled: false
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
      hosts:
        - host: fulcio.localhost
          path: /dev.sigstore.fulcio.v2.CA
      tls:
        - secretName: fulcio-grpc-ingress-tls
          hosts:
            - fulcio.localhost
  securityContext:
    runAsNonRoot: true
    runAsUser: 65533
createcerts:
  enabled: true
  replicaCount: 1
  name: createcerts
  image:
    registry: ghcr.io
    repository: sigstore/scaffolding/createcerts
    pullPolicy: IfNotPresent
    # v0.2.5
    version: "sha256:720ef9e3e80e0b9a5fb30e6650583351b02ff6a668937f64c9ef3c8e421b24c5"
  serviceAccount:
    create: true
    name: ""
    annotations: {}
    mountToken: true
  securityContext:
    runAsNonRoot: true
    runAsUser: 65533
# Configure ctlog dependency
ctlog:
  enabled: true
  name: ctlog
  forceNamespace: ctlog-system
  fullnameOverride: ctlog
  namespace:
    name: ctlog-system
    create: true
  createtree:
    name: ctlog-createtree
    fullnameOverride: ctlog-createtree
  createcerts:
    name: ctlog-createcerts
    fullnameOverride: ctlog-createcerts
# Force namespace of namespaced resources
forceNamespace: ""
