namespace:
  create: false
  name: fulcio-system

imagePullSecrets: []

config:
  contents: {}
  format: json

server:
  replicaCount: 1
  name: server
  svcPort: 80
  grpcSvcPort: 5554
  # -- KMS type for signing key (possible values: "" / "none", "aws")
  kmsType: none
  secret: fulcio-server-secret
  # -- kubernetes secret name containing IAM credentials for use with AWS KMS
  awsKmsCredentialsSecretName: aws-kms-credentials
  # -- AWS region if using AWS KMS for signing key
  awsKmsRegion: us-east-1
  logging:
    production: false
  image:
    registry: ghcr.io
    repository: sigstore/fulcio
    pullPolicy: IfNotPresent
    # crane digest ghcr.io/sigstore/fulcio:v1.6.6
    # -- v1.6.6
    version: v1.6.6@sha256:d543032eb2d905acffae26e2cb9c9961abc962510cef23af6f133d2c5118d4b5
  args:
    port: 5555
    grpcPort: 5554
    # Valid values: googleca, pkcs11ca, aws-hsm-root-ca-path, fileca, kmsca
    certificateAuthority: fileca
    # kms_resource: gcpkms://....
    # kms_cert_chain: |-
    #   << your PEM encoded cert chain here. Order from active intermedate first to root last >>
    hsm_caroot_id:
    aws_hsm_root_ca_path:
    gcp_private_ca_parent: projects/test/locations/us-east1/caPools/test
    ct_log_url: ""
    disable_ct_log: false
  serviceAccount:
    create: true
    name: ""
    annotations: {}
    mountToken: true
  service:
    type: ClusterIP
    ports:
      - name: http
        port: 80
        protocol: TCP
        targetPort: 5555
      - name: grpc
        port: 5554
        protocol: TCP
        targetPort: 5554
      - name: 2112-tcp
        port: 2112
        protocol: TCP
        targetPort: 2112
  ingress:
    http:
      enabled: true
      className: "nginx"
      annotations: {}
      hosts:
      - path: /
        host: "fulcio.localhost"
      tls: []
    grpc:
      enabled: false
      className: ""
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
      hosts:
        - host: fulcio.localhost
          path: /dev.sigstore.fulcio.v2.CA
      tls:
        - secretName: fulcio-grpc-ingress-tls
          hosts:
            - fulcio.localhost
  ingresses:
    - enabled: false
      grpc: true
      http: true
      name: "gce-ingress"
      className: "gce"
      hosts:
        - path: /
          host: fulcio.localhost
      annotations: {}
      tls: []
      staticGlobalIP: lb-ext-ip
      frontendConfigSpec:   # https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-configuration#configuring_ingress_features_through_frontendconfig_parameters
        sslPolicy: fulcio-ssl-policy
        redirectToHttps:
          enabled: true
      backendConfigSpec:   # https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-configuration#configuring_ingress_features_through_backendconfig_parameters
        securityPolicy:
          name: fulcio-security-policy
        logging:
          enable: true
        healthCheck:
          port: 5555
          requestPath: "/healthz"
          type: HTTP
  resources: {}
  securityContext:
    runAsNonRoot: true
    runAsUser: 65533
  tolerations: []
  nodeSelector: {}
  affinity: {}

createcerts:
  enabled: true
  replicaCount: 1
  name: createcerts
  image:
    registry: ghcr.io
    repository: sigstore/scaffolding/createcerts
    pullPolicy: IfNotPresent
    # v0.7.18
    version: sha256:2a2bb96f108b5a8aa9ca07f18be1e3dd673c41ca4836adc1b6129cea213b417c
  ttlSecondsAfterFinished: 3600
  serviceAccount:
    create: true
    name: ""
    annotations: {}
    mountToken: true
  resources: {}
  securityContext:
    runAsNonRoot: true
    runAsUser: 65533
  annotations: {}
  tolerations: []
  nodeSelector: {}
  affinity: {}

# Configure ctlog dependency
ctlog:
  enabled: true
  name: ctlog
  forceNamespace: ctlog-system
  fullnameOverride: ctlog
  namespace:
    name: ctlog-system
    create: true
  createtree:
    name: ctlog-createtree
    fullnameOverride: ctlog-createtree
  createcerts:
    name: ctlog-createcerts
    fullnameOverride: ctlog-createcerts
  createctconfig:
    logPrefix: fulcio

# Force namespace of namespaced resources
forceNamespace: ""
